// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  firstName     String   @map("first_name")
  lastName      String   @map("last_name")
  emailAddress  String   @unique @map("email_address")
  username      String   @unique @map("username")
  password      String   @map("password")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  isDeleted     Boolean  @default(false) @map("is_deleted")
  isDeactivated Boolean  @default(false) @map("is_deactivated")
  phoneNumber     String?  @map("phone_number")
  occupation      String?  @map("occupation")
  bio             String?  @map("bio")
  status          String?  @map("status")
  secondaryEmail  String?  @map("secondary_email")
  profilePhoto    String?  @map("profile_photo")
  blogs Blog[]

  @@map("users")
}

model Blog {
  id             String   @id @default(uuid())
  title          String  @map("title")
  excerpt        String  @map("excerpt")
  body           String @map("body")
  featuredImage  String @map("featured_image")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  author         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String

  @@map("blogs")
}
